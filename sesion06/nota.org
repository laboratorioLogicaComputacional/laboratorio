#+LATEX_CLASS: article
#+LANGUAGE: es
#+LATEX_HEADER: \usepackage[AUTO]{babel}
#+LATEX_HEADER: \usepackage{fancyvrb}
#+OPTIONS: toc:nil
#+DATE:
#+AUTHOR: Dr. Miguel Carrillo Barajas \\
#+AUTHOR: Estefanía Prieto Larios \\
#+AUTHOR: Mauricio Esquivel Reyes \\
#+TITLE: Sesión de laboratorio 06 \\
#+TITLE: Lógica Computacional
* 
* Formulas de Horn
La sintaxis de las formulas (proposicionales) de Horn, HORN, se define con notación BNF como sigue.

\[HORN                ::= <ClausulaDeHorn> | <ClausulaDeHorn> \land HORN.\]
\[<ClausulaDeHorn>    ::= (<Premisa> \rightarrow <Conclusion>)\]
\[<Premisa>           ::= <Atom> | (<Atom> \land <Premisa>)\]
\[<Conclusion>        ::= <Atom>\]
\[<Atom>              ::= \bot | \top | <Variable>\]
\[<Variable>          ::= v <Indice>\]
\[<Indice>            ::= i, i \in \mathbb{N}.\]

Una formula de Horn es una conjunción de clausulas de Horn.
Una clausula de Horn es una implicación cuya premisa es una conjuncion de 
átomos (\bot,\top,v_i) y cuya conclusión es un átomo.

#+begin_src haskell
-- Atomos para clausulas de Horn
data Hatom  =  Htop | Hbot | Hvar Indice deriving (Eq) 
-- Clausula de Horn: Premisa=[atomo1,...,atomoN] -> Conclusion=Atomo
data Fhorn  =   Himp [Hatom] Hatom                     
 -- Conjuncion de formulas de Horn 
              | Hand Fhorn Fhorn  deriving (Eq, Show)  
#+end_src

** Atomos marcados
Nos regresa True si todos los atomos de una premisa estan marcados. False en otro caso
#+begin_src haskell
atomosMarcados :: [Hatom] -> [Hatom] -> Bool
atomosMarcados lm premisa = and [a `elem` lm | a <- premisa] 
#+end_src

** Marca conclusiones 
Agrega las conclusiones de una lista de clausulas de Horn a una lista de atomos marcados.
#+begin_src haskell
marcaConclusiones :: [Hatom] -> [Fhorn] -> [Hatom]
marcaConclusiones lMarcados lcH = case lcH of
 [] -> lMarcados
 (Himp _ c):cHs -> marcaConclusiones (c:lMarcados) cHs
 _  -> error $ "marcaConclusiones: no es una clausula de Horn: "++show (head lcH)
#+end_src

** Clausulas marcables 
Regresa la lista de clausulas de phi que tienen una conclusión marcable.
Def. $f$ es una clausula con conclusión marcable si: $f = p \rightarrow c$, los atomos de $p$ están marcados, y $c$ no está marcada.

#+begin_src haskell
clausulasHmarcables :: [Hatom] -> Fhorn -> [Fhorn]
clausulasHmarcables lMarcados phi = case phi of
 Himp premisa conclusion -> if (atomosMarcados lMarcados premisa) && 
(conclusion `notElem` lMarcados)
  then [phi]
  else []
 Hand f1 f2 -> clausulasHmarcables lMarcados f1 ++ clausulasHmarcables lMarcados f2
#+end_src
